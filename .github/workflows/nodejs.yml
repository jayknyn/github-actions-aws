name: NodeJS JK Test

on: [push]

jobs:
  build:
    name: Build Site
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '8.x'

      - name: Setup private JFrog NPM repository
        run: |
          npm config set _auth ${{ secrets.NPM_TOKEN }}
          npm config set registry https://rbcplatform.jfrog.io/rbcplatform/api/npm/npm-virtual
          npm config set always-auth true
          npm config list | grep 'registry'

      - name: Install NPM packages
        run: yarn

      - name: Build file
        run: yarn build
  tf_fmt:
    name: Deploy Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions/init@v0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: './'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        uses: hashicorp/terraform-github-actions/validate@v0.3.7

      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions/apply@v0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: './'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync S3
        uses: jakejarvis/s3-sync-action@master
        env:
          SOURCE_DIR: './dist'
          AWS_REGION: 'us-east-1'
          AWS_S3_BUCKET: 'jk-remote-state'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
